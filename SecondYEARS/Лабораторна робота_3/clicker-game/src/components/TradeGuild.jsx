import { useEffect } from 'react';

/**
 *  üèõÔ∏è  –¢–æ—Ä–≥–æ–≤–∞ –≥—ñ–ª—å–¥—ñ—è
 *  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 *  ‚Ä¢ –ö–æ–∂–µ–Ω –∞–ø“ë—Ä–µ–π–¥ —â–æ—Å–µ–∫—É–Ω–¥–∏ (–∞–±–æ —Ä–∞–∑ –Ω–∞ 3 / 5 / 7 / 10 —Å) –ø—Ä–æ–¥–∞—î 1 –æ–¥. —Å–≤–æ–≥–æ —Ä–µ—Å—É—Ä—Å—É
 *  ‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å, —â–æ –ø—Ä–æ–¥–∞—î—Ç—å—Å—è = —Ä—ñ–≤–Ω—é –∞–ø“ë—Ä–µ–π–¥—É (1 —Ä—ñ–≤–µ–Ω—å ‚Üí 1 –æ–¥. –∑–∞ —Ü–∏–∫–ª)
 *  ‚Ä¢ –¶—ñ–Ω–∏ –≤–∫–∞–∑–∞–Ω—ñ —É —Ç–∞–±–ª–∏—Ü—ñ ¬´prices¬ª
 */
function TradeGuild({ processed, setProcessed, resources, setResources, trade, setTrade }) {
  /**  —Ü—ñ–Ω–∞ –∑–æ–ª–æ—Ç–∞ –∑–∞ 1 –æ–¥. —Ä–µ—Å—É—Ä—Å—É */
  const prices = {
    food: 1,      wood: 2,   ore: 3,    meal: 10,   planks: 4,
    copper: 20,   iron: 45,  whiteIron: 80, crystal: 200,
    tools: 50,    furniture: 90,
    painting: 120, book: 100,
    bandage: 30,  potion: 60, tincture: 70,
    fancyMeal: 90, drySnack: 55,
    clothes: 80,  fancyClothes: 150,
  };

  useEffect(() => {
    let tick = 0;

    const interval = setInterval(() => {
      /** ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 1. –†–µ—Å—É—Ä—Å–∏ –∑ resources ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
      setResources(prev => {
        const up = { ...prev };

        const sellFromResources = (key, level, intervalSec = 1) => {
          if (level > 0 && tick % intervalSec === 0 && up[key] >= level) {
            up[key] -= level;
            up.gold += level * prices[key];
          }
        };

        sellFromResources('food', trade.marketStall);                 // üõí
        sellFromResources('wood', trade.woodSeller);                  // ü™µ
        sellFromResources('ore',  trade.oreSeller);                   // ‚õèÔ∏è

        return up;
      });

      /** ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 2. –†–µ—Å—É—Ä—Å–∏ –∑ processed ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
      setProcessed(prev => {
        const up = { ...prev };
        let goldGain = 0;

        const sellFromProcessed = (key, level, intervalSec = 1) => {
          if (level > 0 && tick % intervalSec === 0 && up[key] >= level) {
            up[key] -= level;
            goldGain += level * prices[key];
          }
        };

        // —â–æ—Å–µ–∫—É–Ω–¥–∏
        sellFromProcessed('meal',      trade.mealSeller);
        sellFromProcessed('planks',    trade.planksSeller1);
        sellFromProcessed('planks',    trade.planksSeller2);
        sellFromProcessed('copper',    trade.copperSeller);
        sellFromProcessed('iron',      trade.ironSeller);
        sellFromProcessed('whiteIron', trade.whiteIronSeller);
        sellFromProcessed('crystal',   trade.crystalSeller);
        sellFromProcessed('tools',     trade.toolsSeller);
        sellFromProcessed('furniture', trade.furnitureSeller);
        sellFromProcessed('clothes',   trade.clothesSeller);

        // —ñ–Ω—Ç–µ—Ä–≤–∞–ª ‚â† 1 —Å
        sellFromProcessed('painting',    trade.paintingSeller, 10);
        sellFromProcessed('book',        trade.bookSeller,     10);
        sellFromProcessed('bandage',     trade.bandageSeller,   5);
        sellFromProcessed('potion',      trade.potionSeller,    7);
        sellFromProcessed('tincture',    trade.tinctureSeller,  3);
        sellFromProcessed('fancyMeal',   trade.fancyMealSeller, 5);
        sellFromProcessed('drySnack',    trade.drySnackSeller, 10);
        sellFromProcessed('fancyClothes',trade.fancyClothesSeller, 10);

        if (goldGain > 0) {
          setResources(r => ({ ...r, gold: r.gold + goldGain }));
        }
        return up;
      });

      tick++;
    }, 1000);

    return () => clearInterval(interval);
  }, [trade]);

  /** –ü–æ–∫—É–ø–∫–∞ –∞–ø“ë—Ä–µ–π–¥—É */
  const handleBuy = (key, cost) => {
    if (resources.gold < cost) return;
    setResources(r => ({ ...r, gold: r.gold - cost }));
    setTrade(t => ({ ...t, [key]: (t[key] || 0) + 1 }));
  };

  /** –°–ø–∏—Å–æ–∫ –∞–ø“ë—Ä–µ–π–¥—ñ–≤ */
  const upgrades = [
    { key: 'marketStall',   label: 'üõí –†–∏–Ω–æ—á–Ω–∏–π –∫—ñ–æ—Å–∫',             cost: 25,  effect: '2 —ó–∂–∞/—Å–µ–∫' },
    { key: 'woodSeller',    label: 'üè† –î–µ—Ä–µ–≤–æ-–∑–∞–≥–æ—Ç. –±—É–¥–∏–Ω–æ–∫',      cost: 40,  effect: '2 –¥–µ—Ä–µ–≤–∏–Ω–∞/—Å–µ–∫' },
    { key: 'oreSeller',     label: '‚õèÔ∏è –ö–∞–º–µ–Ω–æ–ª–æ–º–Ω—è',                cost: 45,  effect: '2 —Ä—É–¥–∞/—Å–µ–∫' },
    { key: 'mealSeller',    label: 'üçΩÔ∏è –á–¥–∞–ª—å–Ω—è',                   cost: 90,  effect: '2 —Å—Ç—Ä–∞–≤–∞/—Å–µ–∫' },
    { key: 'planksSeller1', label: 'ü™ë –î–µ—Ä–µ–≤ º—è–Ω–∏–π —Ä–∏–Ω–æ–∫',            cost: 60,  effect: '2 –¥–æ—à–∫–∞/—Å–µ–∫' },
    { key: 'planksSeller2', label: 'ü™ö –ú–∞–π—Å—Ç–µ—Ä–Ω—è –¥–µ—Ä–µ–≤–æ—Ä–æ–±–∞',       cost: 75,  effect: '2 –¥–æ—à–∫–∞/—Å–µ–∫' },
    { key: 'copperSeller',  label: 'ü™ô –ö—É–ø–µ—Ü—å–∫–∏–π –º–æ–Ω–µ—Ç–Ω–∏–π –¥–≤—ñ—Ä',    cost: 120, effect: '2 –º—ñ–¥—å/—Å–µ–∫' },
    { key: 'ironSeller',    label: '‚öîÔ∏è –ó–±—Ä–æ—è—Ä–Ω—è',                  cost: 140, effect: '2 –∑–∞–ª—ñ–∑–æ/—Å–µ–∫' },
    { key: 'whiteIronSeller',label:'üõ°Ô∏è –ë—Ä–æ–Ω–Ω–∏–∫',                  cost: 170, effect: '2 –±—ñ–ª–µ –∑–∞–ª—ñ–∑–æ/—Å–µ–∫' },
    { key: 'crystalSeller', label: 'üîÆ –ß–∞—Ä—ñ–≤–Ω–∞ –æ–±—Å–µ—Ä–≤–∞—Ç–æ—Ä—ñ—è',       cost: 220, effect: '2 –∫—Ä–∏—Å—Ç–∞–ª/—Å–µ–∫' },
    { key: 'toolsSeller',   label: 'üîß –ë—É–¥–∏–Ω–æ–∫ —Ä–µ–º—ñ—Å–Ω–∏–∫—ñ–≤',         cost: 150, effect: '2 —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç/—Å–µ–∫' },
    { key: 'furnitureSeller',label:'ü™ë –ú–µ–±–ª–µ–≤–∏–π –º–∞–≥–∞–∑–∏–Ω—á–∏–∫',       cost: 160, effect: '2 –º–µ–±–ª—ñ/—Å–µ–∫' },
    { key: 'paintingSeller',label: 'üé® –ì—ñ–ª—å–¥—ñ—è –º–∞–ª—è—Ä—ñ–≤',            cost: 200, effect: '2 –∫–∞—Ä—Ç–∏–Ω–∞/10 —Å' },
    { key: 'bookSeller',    label: 'üìö –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞',                 cost: 200, effect: '2 –∫–Ω–∏–≥–∞/10 —Å' },
    { key: 'bandageSeller', label: 'ü©π –ê–ø—Ç–µ–∫–∞ –º–∏–ª–æ—Å–µ—Ä–¥—è',           cost: 140, effect: '2 –±–∏–Ω—Ç/5 —Å' },
    { key: 'potionSeller',  label: 'üíä –õ—ñ–∫—É–≤–∞–ª—å–Ω–∏–π –°–æ–±–æ—Ä',          cost: 180, effect: '2 –ª—ñ–∫–∏/7 —Å' },
    { key: 'tinctureSeller',label: 'üß™ –ë—É–¥–∏–Ω–æ–∫ —Ü—ñ–ª–∏—Ç–µ–ª—è',           cost: 160, effect: '2 –Ω–∞—Å—Ç–æ—è–Ω–∫–∞/3 —Å' },
    { key: 'fancyMealSeller',label:'üçñ –õ–∞–≤–∫–∞ –µ–∫–∑–æ—Ç. –¥–µ–ª—ñ–∫.',       cost: 180, effect: '2 –≤–∏—à—É–∫. —Å—Ç—Ä–∞–≤–∞/5 —Å' },
    { key: 'drySnackSeller',label:'ü•™ –õ–∞–≤–∫–∞ –ø–æ—Ö—ñ–¥–Ω. –∑–∞–ø–∞—Å—ñ–≤',       cost: 150, effect: '2 —Å—É—Ö–ø–∞–π/10 —Å' },
    { key: 'clothesSeller', label: 'üëó –ê—Ç–µ–ª—å—î',                     cost: 160, effect: '2 –æ–¥–µ–∂–∞/—Å–µ–∫' },
    { key: 'fancyClothesSeller',label:'üëë –¢–∫–∞—Ü—å–∫–∏–π –¥–≤—ñ—Ä –∞—Ä–∏—Å—Ç.',   cost: 220, effect: '2 –≤–∏—à—É–∫. –æ–¥–µ–∂/10 —Å' },
  ];

  return (
    <div className="trade-guild">
      <h2>üèõÔ∏è –¢–æ—Ä–≥–æ–≤–∞ –≥—ñ–ª—å–¥—ñ—è</h2>
      <ul>
        {upgrades.map(u => (
          <li key={u.key} style={{ marginBottom: '1rem' }}>
            {u.label} ‚Äî {trade[u.key] || 0} —à—Ç.
            <br />
            <button
              onClick={() => handleBuy(u.key, u.cost)}
              style={{
                marginTop: '0.25rem',
                fontSize: '0.85rem',
                padding: '0.4rem 0.7rem',
                borderRadius: '6px',
                backgroundColor: '#5c4033',
                color: 'white',
                border: 'none',
                cursor: 'pointer',
              }}
            >
              –ö—É–ø–∏—Ç–∏ ({u.cost} ü™ô)
            </button>
            <br />
            <small style={{ color: '#555' }}>‚ñ∂ {u.effect}</small>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default TradeGuild;
